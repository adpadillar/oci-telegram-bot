version: 0.1
component: build
timeoutInSeconds: 1800
shell: bash
env:
  variables:
    # Docker Registry Information
    DOCKER_REGISTRY: "${region-code}.ocir.io"
    NAMESPACE: "${namespace}"

    # Repository Information
    BACKEND_REPO: "${namespace}/todolistapp-springboot"

    # Dockerfile Paths
    BACKEND_DOCKERFILE_PATH: "Dockerfile"

    # Build Contexts
    BACKEND_CONTEXT: "."

  exportedVariables:
    - BACKEND_IMAGE_TAG

steps:
  # Step 1: Login to OCIR
  - type: Command
    name: "Login to OCIR"
    timeoutInSeconds: 60
    command: |
      echo "Logging into OCIR..."
      echo "(.sfJ{t2an{6vTsN4fKZ" | docker login -u "axb2aizifb6n/a01637239@tec.mx" --password-stdin "mx-queretaro-1.ocir.io"

      echo "Logging into Docker Hub..."
      echo "dckr_pat_LKtmjo-KcfLdRZOEPgRToNDdVjc" | docker login docker.io -u "adpadillar" --password-stdin
    onFailure:
      - type: Command
        command: |
          echo "Failed to login to OCIR"
          exit 1

  # Step 2: Build and Push Backend Image
  - type: Command
    name: "Build and Push Backend Image"
    timeoutInSeconds: 600
    command: |
      echo "Building backend image..."

      IMAGE_NAME=todolistapp-springboot
      IMAGE_VERSION=$(date '+%Y%m%d_%H%M%S')  # Dynamic version based on timestamp
      DOCKER_REGISTRY="mx-queretaro-1.ocir.io/axb2aizifb6n/reacttodo/r37hp"

      export IMAGE=${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_VERSION}

      cd MtdrSpring/backend
      docker build -f Dockerfile -t $IMAGE .
      docker push $IMAGE

      cd ../../

      echo "Preparando archivo de despliegue..."

      # Copiar el archivo de despliegue
      cp MtdrSpring/backend/src/main/resources/todolistapp-springboot.yaml deployment.yaml

      # Reemplazar los placeholders con las im√°genes construidas
      sed -i "s|%IMAGE%|$IMAGE|g" deployment.yaml

      echo "Archivo de despliegue preparado"
    onFailure:
      - type: Command
        command: |
          echo "Failed to build or push backend image"
          exit 1

outputArtifacts:
  - name: deployment-manifest
    type: BINARY
    location: deployment.yaml
